[tool.poetry]
name = "galileo-protect"
version = "0.0.2"
description = "üõ°Ô∏è Secure your Generative AI applications with Galileo Protect!"
authors = ["Galileo Technologies Inc. <team@rungalileo.io>"]
readme = "README.md"
packages = [{include = "galileo_protect", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8.1,<3.13"


[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
coverage = "^7.3.4"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.5.0"
pytest-socket = "^0.7.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
pre-commit = "^3.5.0"
invoke = "^2.2.0"


[tool.poetry.group.docs.dependencies]
furo = "^2024.0.0"
sphinx-autodoc-typehints = "^2.0.0"
myst-parser = "^2.0.0"
sphinx-markdown-builder = "^0.6.5"
sphinx-autobuild = "^2021.3.14"
autodoc-pydantic = "^2.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Test.
[tool.pytest.ini_options]
pythonpath = ["./src/"]
addopts = [
    # Run tests in parallel.
    "-n",
    "auto",
    # Show local variables in tracebacks.
    "--showlocals",
    # Show extra test summary info as specified by chars.
    "-o",
    "console_output_style=progress",
    # Disable warnings.
    "--disable-warnings",
    # Show slowest 10 test durations.
    "--durations=10",
    # Disable internet access.
    "--disable-socket",
]

# Formatters.
[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.docformatter]
style = "numpy"
recursive = true
wrap-summaries = 120
wrap-descriptions = 120

# Linters.
[tool.ruff]
line-length = 120
ignore = ["D10", "D415"]
fix = true
ignore-init-module-imports = true

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.mypy]
mypy_path = ["src"]
disallow_untyped_defs = true
# plugins = ["pydantic.mypy"]

# Release.
[tool.semantic_release]
version_variables = [
    # Package version.
    "src/galileo_protect/__init__.py:__version__",
    # Docs version.
    "docs/source/conf.py:release",
]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_message = "chore(release): v{version}\n\nAutomatically generated by python-semantic-release"

[tool.semantic_release.commit_parser_options]
# Release patch version on these tags,
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html#commit-parser-options-dict-str-any
patch_tags = ["fix", "perf", "chore", "docs", "style", "refactor"]
