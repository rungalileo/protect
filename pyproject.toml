[tool.poetry]
name = "galileo-protect"
version = "0.15.3"
description = "üõ°Ô∏è Secure your Generative AI applications with Galileo Protect!"
authors = ["Galileo Technologies Inc. <team@rungalileo.io>"]
readme = "README.md"
packages = [{include = "galileo_protect", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8.1,<3.13"
galileo-core = "^2.30.2"

langchain-core = { version = ">=0.1.52,<0.3.0", optional = true }


[tool.poetry.extras]
langchain = ["langchain-core"]
all = ["langchain-core"]


[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
coverage = "^7.3.4"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.5.0"
pytest-socket = "^0.7.0"
pytest-asyncio = "^0.24.0"
galileo-core = { extras = ["testing"], version = "^2.30.2" }


[tool.poetry.group.dev.dependencies]
# Can't use the v1.11.0 release of mypy until https://github.com/python/mypy/issues/17535 is resolved.
mypy = "^1.10.0,<1.11.0"
pre-commit = "^3.5.0"
invoke = "^2.2.0"
pydantic = { extras = ["mypy"], version = "^2.6.0" }


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
mkdocstrings = "^0.26.0"
mkdocstrings-python = "^1.10.2"
mkdocs-material = "^9.5.24"
griffe-fieldz = "^0.2.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Test.
[tool.pytest.ini_options]
pythonpath = ["./src/"]
addopts = [
    # Run tests in parallel.
    "-n",
    "auto",
    # Show local variables in tracebacks.
    "--showlocals",
    # Show extra test summary info as specified by chars.
    "-o",
    "console_output_style=progress",
    # Disable warnings.
    "--disable-warnings",
    # Show slowest 10 test durations.
    "--durations=10",
    # Disable internet access.
    "--disable-socket",
    "--allow-unix-socket",
]
asyncio_default_fixture_loop_scope = "function"

# Linters and formatters.
[tool.ruff]
line-length = 120
fix = true
src = ["src"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "UP", "ASYNC"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["galileo_core"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.docformatter]
style = "numpy"
recursive = true
wrap-summaries = 120
wrap-descriptions = 120


[tool.mypy]
mypy_path = ["src"]
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

# Release.
[tool.semantic_release]
# Package version.
version_variables = [
    "src/galileo_protect/__init__.py:__version__"
]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_message = "chore(release): v{version}\n\nAutomatically generated by python-semantic-release"

[tool.semantic_release.commit_parser_options]
# Release patch version on these tags,
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html#commit-parser-options-dict-str-any
patch_tags = ["fix", "perf", "chore", "docs", "style", "refactor"]
